navbar.css
/* Navbar styling */
.navbar {
  padding: 15px 20px;
}

.navbar-brand {
  font-size: 1.75rem;
  font-weight: bold;
  letter-spacing: 1px;
  color: #fff !important;
}

.navbar-toggler-icon {
  background-color: #fff;
}

.navbar-nav .nav-link {
  font-size: 1.1rem;
  margin-left: 15px;
  color: #fff !important;
}

.navbar-nav .nav-link:hover {
  color: #f8f9fa !important;
  text-decoration: underline;
}

.navbar-dark .navbar-nav .nav-link {
  color: #fff;
}

.navbar-dark .navbar-nav .nav-link:hover {
  color: #f8f9fa !important;
}

/* Custom Button Styling */
.btn-outline-light {
  margin-left: auto;
  padding: 8px 15px;
  font-size: 1rem;
  transition: background-color 0.3s ease;
}

.btn-outline-light:hover {
  background-color: #f8f9fa;
  color: #007bff;
  border-color: #007bff;
}

.container-fluid {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@media (max-width: 767px) {
  .navbar .container-fluid {
    flex-direction: column;
    align-items: flex-start;
  }
}
navbar.js....
import React from "react";
import { Link } from "react-router-dom";
import './Navbar.css'; // Import the CSS file

export default function Navbar() {
  return (
    <div>
        <nav className="navbar navbar-expand-lg navbar-dark bg-primary">
        <div className="container-fluid">
          <Link className="navbar-brand" to="/">
          CRUD Application
          </Link>
          <button
            className="navbar-toggler"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent"
            aria-expanded="false"
            aria-label="Toggle navigation"
          >
            <span className="navbar-toggler-icon"></span>
          </button>

          <Link className="btn btn-outline-light" to="/addemp">
            Add Employee
          </Link>
        </div>
      </nav>
    </div>
  );
}
home.css.....
/* Container Styling */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

/* Table Styling */
.table {
  width: 100%;
  border-collapse: collapse;
  margin-top: 20px;
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.1);
}

.table th, .table td {
  padding: 12px;
  text-align: center;
}

.table th {
  background-color: #007bff;
  color: white;
  font-weight: bold;
  text-transform: uppercase;
}

.table td {
  background-color: #f9f9f9;
  color: #333;
}

.table-striped tbody tr:nth-of-type(odd) {
  background-color: #f2f2f2;
}

.table-hover tbody tr:hover {
  background-color: #e6f7ff;
}

.table-bordered th, .table-bordered td {
  border: 1px solid #ddd;
}

/* Button Styling */
.btn {
  font-size: 1rem;
  padding: 8px 15px;
  border-radius: 5px;
  transition: all 0.3s ease;
}

.btn-primary {
  background-color: #007bff;
  border: none;
}

.btn-primary:hover {
  background-color: #0056b3;
  color: #fff;
  cursor: pointer;
}

.btn-primary:focus {
  outline: none;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

/* Responsive Table */
@media (max-width: 768px) {
  .table th, .table td {
    padding: 8px;
  }

  .container {
    padding: 10px;
  }

  .table {
    font-size: 0.9rem;
  }
}

/* Card-like Wrapper for the Table */
.py-4 {
  background-color: #fff;
  border-radius: 8px;
  padding: 20px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

/* Header Styling */
h2 {
  text-align: center;
  margin-bottom: 20px;
  color: #333;
}
home.js.......

import React, { useEffect, useState } from "react";
import axios from "axios";
import { Link } from "react-router-dom";
import './Home.css'; // Import the custom CSS file

export default function Home() {
  const [employee, setemp] = useState([]);

  useEffect(() => {
    loademp();
  }, []);

  const loademp = async () => {
    const result = await axios.get("http://localhost:8080/Employee/getAll");
    setemp(result.data);
  };

  return (
    <div className="container">
      <div className="py-4">
        <h2>Employee List</h2>
        <table className="table table-striped table-hover table-bordered">
          <thead>
            <tr>
              <th scope="col">Name</th>
              <th scope="col">Action</th>
            </tr>
          </thead>
          <tbody>
            {employee.map((employee, index) => (
              <tr key={index}>
                <td>{employee.name}</td>
                <td>
                  <Link
                    className="btn btn-primary mx-2"
                    to={`/viewemp/${employee.id}`}
                  >
                    View
                  </Link>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}
addemp.......
/* Container Styling */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

/* Form Card Styling */
.col-md-6 {
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
}

.border {
  border: 1px solid #ddd;
}

.p-4 {
  padding: 30px;
}

/* Header Styling */
h2 {
  font-size: 1.8rem;
  font-weight: 600;
  color: #333;
  text-align: center;
}

/* Input Field Styling */
.form-control {
  border-radius: 8px;
  padding: 10px;
  font-size: 1rem;
  border: 1px solid #ced4da;
  transition: all 0.3s ease;
}

.form-control:focus {
  border-color: #007bff;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}

/* Label Styling */
.form-label {
  font-weight: 600;
  color: #555;
}

/* Button Styling */
.btn {
  font-size: 1rem;
  font-weight: 600;
  padding: 10px 20px;
  border-radius: 25px;
  transition: all 0.3s ease;
}

/* Submit Button */
.btn-outline-primary {
  background-color: #007bff;
  color: #fff;
  border: 2px solid #007bff;
}

.btn-outline-primary:hover {
  background-color: #0056b3;
  border: 2px solid #0056b3;
  cursor: pointer;
}

/* Cancel Button */
.btn-outline-danger {
  color: #dc3545;
  border: 2px solid #dc3545;
}

.btn-outline-danger:hover {
  background-color: #dc3545;
  color: #fff;
  border: 2px solid #dc3545;
  cursor: pointer;
}

/* Margin Between Buttons */
.mx-2 {
  margin-left: 10px;
  margin-right: 10px;
}

/* Spacing Between Form Elements */
.mb-3 {
  margin-bottom: 20px;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
  .col-md-6 {
    margin-top: 30px;
    padding: 15px;
  }

  h2 {
    font-size: 1.5rem;
  }

  .form-control {
    padding: 12px;
    font-size: 0.95rem;
  }

  .btn {
    font-size: 0.9rem;
  }
}
addemp.js.......
import React, { useState } from "react";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom";
import './Addemp.css'; // Import the custom CSS file

export default function Addemp() {
  let navigate = useNavigate();

  const [employee, setemp] = useState({
    name: "",
    email: "",
    mobile: "",
    password: "",
    country: "",
  });

  const { name, email , mobile, password ,country} = employee;

  const onInputChange = (e) => {
    setemp({ ...employee, [e.target.name]: e.target.value });
  };

  const onSubmit = async (e) => {
    e.preventDefault();
    await axios.post("http://localhost:8080/Employee/save", employee);
    navigate("/");
  };

  return (
    <div className="container">
      <div className="row">
        <div className="col-md-6 offset-md-3 border rounded p-4 mt-2 shadow">
          <h2 className="text-center m-4">Register Employee</h2>

          <form onSubmit={(e) => onSubmit(e)}>
            <div className="mb-3">
              <label htmlFor="Name" className="form-label">
                Name
              </label>
              <input
                type={"text"}
                className="form-control"
                placeholder="Enter your name"
                name="name"
                value={name}
                onChange={(e) => onInputChange(e)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="Email" className="form-label">
                Email
              </label>
              <input
                type={"text"}
                className="form-control"
                placeholder="Enter your email"
                name="email"
                value={email}
                onChange={(e) => onInputChange(e)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="Mobile" className="form-label">
                Mobile
              </label>
              <input
                type={"text"}
                className="form-control"
                placeholder="Enter your mobile"
                name="mobile"
                value={mobile}
                onChange={(e) => onInputChange(e)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="password" className="form-label">
                Password
              </label>
              <input
                type={"text"}
                className="form-control"
                placeholder="Enter your password"
                name="password"
                value={password}
                onChange={(e) => onInputChange(e)}
              />
            </div>
            <div className="mb-3">
              <label htmlFor="country" className="form-label">
                Country
              </label>
              <input
                type={"text"}
                className="form-control"
                placeholder="Enter your country"
                name="country"
                value={country}
                onChange={(e) => onInputChange(e)}
              />
            </div>
            <button type="submit" className="btn btn-outline-primary">
              Submit
            </button>
            <Link className="btn btn-outline-danger mx-2" to="/">
              Cancel
            </Link>
          </form>
        </div>
      </div>
    </div>
  );
}
view.csss.....
/* Container Styling */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

/* Card Styling */
.card {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  padding: 20px;
}

.card-header {
  background-color: #007bff;
  color: white;
  font-size: 1.25rem;
  font-weight: 600;
  border-radius: 8px 8px 0 0;
  padding: 15px;
}

/* List Group */
.list-group-item {
  padding: 12px 20px;
  font-size: 1.1rem;
  border: 1px solid #f0f0f0;
  background-color: #f9f9f9;
}

.list-group-item b {
  color: #007bff;
}

.list-group-item:hover {
  background-color: #f0f8ff;
}

/* Button Styling */
.btn {
  font-size: 1rem;
  font-weight: 600;
  padding: 10px 20px;
  border-radius: 25px;
  transition: all 0.3s ease;
}

/* Primary Button */
.btn-primary {
  background-color: #007bff;
  border: 2px solid #007bff;
  color: #fff;
}

.btn-primary:hover {
  background-color: #0056b3;
  border-color: #0056b3;
  cursor: pointer;
}

/* Secondary Button */
.btn-secondary {
  background-color: #6c757d;
  border: 2px solid #6c757d;
  color: #fff;
}

.btn-secondary:hover {
  background-color: #5a6268;
  border-color: #5a6268;
  cursor: pointer;
}

/* Danger Button */
.btn-danger {
  background-color: #dc3545;
  border: 2px solid #dc3545;
  color: #fff;
}

.btn-danger:hover {
  background-color: #c82333;
  border-color: #c82333;
  cursor: pointer;
}

/* Spacing Between Buttons */
.mx-2 {
  margin-left: 10px;
  margin-right: 10px;
}

/* Padding Around Buttons */
.my-2 {
  margin-top: 15px;
  margin-bottom: 15px;
}

/* Heading Styling */
h2 {
  font-size: 1.8rem;
  font-weight: 600;
  color: #333;
  text-align: center;
  margin-bottom: 20px;
}

/* Responsive Design */
@media (max-width: 768px) {
  .col-md-6 {
    margin-top: 30px;
  }

  .card {
    padding: 15px;
  }

  h2 {
    font-size: 1.5rem;
  }

  .btn {
    font-size: 0.9rem;
  }
}
view.js.......
import React, { useEffect, useState } from "react";
import { Link, useParams } from "react-router-dom";
import axios from "axios";
import './Viewemp.css'; // Import the custom CSS file

export default function Viewemp() {
  const [employee, setemp] = useState({
    name: "",
    email: "",
    mobile: "",
    password: "",
    country: "",
  });

  const { id } = useParams();

  useEffect(() => {
    loademp();
  }, []);
  
  const deleteemp = async (id) => {
    await axios.delete(`http://localhost:8080/Employee/delete/${id}`);
    loademp();
  };

  const loademp = async () => {
    const result = await axios.get(`http://localhost:8080/Employee/get/${id}`);
    setemp(result.data);
  };

  return (
    <div className="container">
      <div className="row">
        <div className="col-md-6 offset-md-3 border rounded p-4 mt-2 shadow">
          <h2 className="text-center m-4">Employee Details</h2>

          <div className="card">
            <div className="card-header">
              Details of employee id : {employee.id}
            </div>
            <ul className="list-group list-group-flush">
              <li className="list-group-item">
                <b>Name:</b> {employee.name}
              </li>
              <li className="list-group-item">
                <b>Email:</b> {employee.email}
              </li>
              <li className="list-group-item">
                <b>Mobile:</b> {employee.mobile}
              </li>
              <li className="list-group-item">
                <b>Password:</b> {employee.password}
              </li>
              <li className="list-group-item">
                <b>Country:</b> {employee.country}
              </li>
            </ul>
          </div>
          <Link className="btn btn-primary my-2" to={"/"}>
            Back to Home
          </Link>
          <Link
            className="btn btn-secondary mx-2"
            to={`/editemp/${employee.id}`}
          >
            Edit
          </Link>
          <Link
            className="btn btn-danger mx-2"
            to={"/"}
            onClick={() => deleteemp(employee.id)}
          >
            Delete
          </Link>
        </div>
      </div>
    </div>
  );
}


Edit.css---------

/* General container styling */
.container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #f4f4f9;
  padding: 20px;
}

/* Form container styling */
.form-container {
  background: #ffffff;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  padding: 30px 40px;
  max-width: 500px;
  width: 100%;
}

/* Form header styling */
.form-header {
  text-align: center;
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 20px;
  color: #333333;
}

/* Form group styling */
.form-group {
  margin-bottom: 15px;
}

label {
  display: block;
  font-size: 14px;
  font-weight: 600;
  margin-bottom: 5px;
  color: #555555;
}

input[type="text"] {
  width: 100%;
  padding: 10px;
  font-size: 14px;
  border: 1px solid #ced4da;
  border-radius: 5px;
  box-sizing: border-box;
  transition: border-color 0.3s, box-shadow 0.3s;
}

input[type="text"]:focus {
  border-color: #007bff;
  box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
  outline: none;
}

/* Button group styling */
.button-group {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 20px;
}

button.submit {
  background-color: #007bff;
  color: #ffffff;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 14px;
  font-weight: bold;
  transition: background-color 0.3s ease-in-out;
}

button.submit:hover {
  background-color: #0056b3;
}

a.cancel {
  background-color: #dc3545;
  color: #ffffff;
  text-decoration: none;
  padding: 10px 20px;
  border-radius: 5px;
  font-size: 14px;
  font-weight: bold;
  transition: background-color 0.3s ease-in-out;
}

a.cancel:hover {
  background-color: #a71d2a;
}

/* Responsive styling */
@media (max-width: 768px) {
  .form-container {
    padding: 20px;
  }

  .form-header {
    font-size: 20px;
  }

  input[type="text"] {
    font-size: 13px;
    padding: 8px;
  }

  button.submit,
  a.cancel {
    font-size: 13px;
    padding: 8px 16px;
  }
}
sigin....... 
import React, { useState } from "react";
import { useAuth } from "./AuthContext";
import "./SignIn.css";

function SignIn() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const { login } = useAuth();

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError("");

    try {
      const response = await fetch("http://localhost:8080/api/auth/signin", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, password }),
      });

      if (response.ok) {
        const data = await response.json();
        if (data.success) {
          login(data.user); // Save user info to global state
          window.location.href = "/home"; // Redirect to the home page
        } else {
          setError(data.message || "Invalid email or password.");
        }
      } else {
        setError("Failed to sign in. Please try again.");
      }
    } catch (error) {
      setError("An error occurred. Please try again.");
    }
  };

  return (
    <div className="signin-container">
      <form className="signin-form" onSubmit={handleSubmit}>
        <h2>Sign In</h2>
        {error && <p className="error-message">{error}</p>}
        <div className="form-group">
          <label htmlFor="email">Email</label>
          <input
            type="email"
            id="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>
        <div className="form-group">
          <label htmlFor="password">Password</label>
          <input
            type="password"
            id="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />
        </div>
        <button type="submit" className="signin-button">
          Sign In
        </button>
      </form>
    </div>
  );
}

export default SignIn;
sign in. css............... 
.signin-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #f4f4f9;
  padding: 20px;
}

.signin-form {
  background: #ffffff;
  border-radius: 8px;
  padding: 30px;
  max-width: 400px;
  width: 100%;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.signin-form h2 {
  margin-bottom: 20px;
  font-size: 24px;
  color: #333;
  text-align: center;
}

.form-group {
  margin-bottom: 15px;
}

.form-group label {
  display: block;
  margin-bottom: 5px;
  font-weight: 500;
  color: #555;
}

.form-group input {
  width: 100%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 14px;
}

.form-group input:focus {
  outline: none;
  border-color: #007bff;
  box-shadow: 0 0 3px rgba(0, 123, 255, 0.5);
}

.signin-button {
  width: 100%;
  padding: 10px 15px;
  font-size: 16px;
  color: #fff;
  background-color: #007bff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.signin-button:hover {
  background-color: #0056b3;
}

.error-message {
  color: #ff4d4d;
  font-size: 14px;
  margin-bottom: 15px;
  text-align: center;
}
AuthContext. js...... 
import React, { createContext, useState, useContext } from "react";

const AuthContext = createContext();

export const AuthProvider = ({ children }) => {
  const [authState, setAuthState] = useState({
    isAuthenticated: false,
    user: null,
  });

  const login = (user) => {
    setAuthState({ isAuthenticated: true, user });
  };

  const logout = () => {
    setAuthState({ isAuthenticated: false, user: null });
  };

  return (
    <AuthContext.Provider value={{ authState, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
};

export const useAuth = () => useContext(AuthContext);
index or app. js..,.................. 
import React from "react";
import ReactDOM from "react-dom";
import { AuthProvider } from "./AuthContext";
import App from "./App";

ReactDOM.render(
  <AuthProvider>
    <App />
  </AuthProvider>,
  document.getElementById("root")
);
